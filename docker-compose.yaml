version: '3.8'

services:

  # employee-service:
  #   build:
  #     context: ./employee-service
  #   hostname: employee-service
  #   container_name: employee-service
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - internal

  # payslip-service:
  #   build:
  #     context: ./payslip-service
  #   hostname: payslip-service
  #   container_name: payslip-service
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - internal

  # time-log-service:
  #   build:
  #     context: ./time-log-service
  #   hostname: time-log-service
  #   container_name: time-log-service
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - internal

  # file-generator-service:
  #   build:
  #     context: ./file-generator-service
  #   hostname: file-generator-service
  #   container_name: file-generator-service
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - internal
  # db-manager-service:
  #   build:
  #     context: ./db-manager-service
  #   container_name: db-manager-service
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
  #     MONGO_INITDB_COLLECTION: ${MONGO_INITDB_COLLECTION}
  #     MONGO_URI: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/admin"
  #   depends_on:
  #     - mongodb
  #   ports:
  #     - "8082:8080"
  #   networks:
  #     - backend

  auth-service:
    build:
      context: ./auth-service
    hostname: auth-service
    container_name: auth-service
    environment:
      SALT_PASS_KEY: ${SALT_PASS_KEY}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_USERS_DATABASE}
      MONGO_INITDB_COLLECTION: ${MONGO_USERS_COLLECTION}
      MONGO_URI: ${MONGO_USERS_URI}
      LOG_LEVEL: ${LOG_LEVEL}
      EXPIRY_HOUR: ${EXPIRY_HOUR}
      APP_NAME: ${APP_NAME}
      CODECOV_TOKEN: ${CODECOV_TOKEN}
      # MONGO_URI: "mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/admin"
    ports:
      - "8085:8080"
    depends_on:
       - authdb
    networks:
      - backend
  authdb:
    image: mongo:latest
    container_name: authdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_USERS_DATABASE}
    ports:
      - "${MONGO_USERS_PORT}:27017"
    volumes:
      - authdb-data:/data/db

    networks:
      - backend
  # empdb:
  #   image: mongo:latest
  #   container_name: empdb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_EMP_DATABASE}
  #   ports:
  #     - "${MONGO_EMP_PORT}:27017"
  #   volumes:
  #     - empdb-data:/data/db

  #   networks:
  #     - backend

  # payslipdb:
  #   image: mongo:latest
  #   container_name: payslipdb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_PAYSLIP_DATABASE}
  #   ports:
  #     - "${MONGO_PAYSLIP_PORT}:27017"
  #   volumes:
  #     - payslipdb-data:/data/db

  #   networks:
  #     - backend
  # timelogdb:
  #   image: mongo:latest
  #   container_name: timelogdb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
  #     MONGO_INITDB_DATABASE: ${MONGO_TIMELOG_DATABASE}
  #   ports:
  #     - "${MONGO_TIMELOG_PORT}:27017"
  #   volumes:
  #     - timelogdb-data:/data/db

  #   networks:
  #     - backend

  # client:
  #   build:
  #     context: ./client
  #   hostname: client
  #   container_name: client
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - api-gateway-service
  #   networks:
  #     - frontend
  # api-gateway-service:
  #   build:
  #     context: ./api-gateway-service
  #   hostname: api-gateway-service
  #   container_name: api-gateway-service
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - employee-service
  #     - payslip-service
  #     - time-log-service
  #     - file-generator-service
  #     - auth-service
  #   networks:
  #     - frontend
  #     - internal

  
  # graphql-playground:
  #   build:
  #     context: ./go-graphql-playground
  #   container_name: graphql-playground
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     - GRAPHQL_ENDPOINT=http://localhost:8082/graphql
  #   depends_on:
  #     - db-manager-service
  #   networks:
  #     - internal

networks:
  backend:
    name: backend-network
  internal:
    name: internal-network
  frontend:
    name: frontend-network

volumes:
  authdb-data:
    name: authdb-data-volume
  empdb-data:
    name: empdb-data-volume
  payslipdb-data:
    name: payslipdb-data-volume
  timelogdb-data:
    name: timelogdb-data-volume
